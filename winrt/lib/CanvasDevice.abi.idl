// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may
// not use these files except in compliance with the License. You may obtain
// a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.

namespace Microsoft.Graphics.Canvas
{
    [version(VERSION)]
    typedef enum CanvasHardwareAcceleration 
    {
        Auto, 
        On,
        Off,
        Unknown
    } CanvasHardwareAcceleration;
    
    runtimeclass CanvasDevice;

    [version(VERSION), uuid(E2C2BF21-5418-43B9-A2DA-539E287C790F), exclusiveto(CanvasDevice)]
    interface ICanvasDeviceFactory : IInspectable
    {
        HRESULT CreateWithDebugLevel(
            [in] CanvasDebugLevel debugLevel,
            [out, retval] CanvasDevice** canvasDevice);

        HRESULT CreateWithDebugLevelAndHardwareAcceleration(
            [in] CanvasDebugLevel debugLevel,
            [in] CanvasHardwareAcceleration hardwareAcceleration,
            [out, retval] CanvasDevice** canvasDevice);
    };

    [version(VERSION), uuid(9B6E2B27-CD07-421A-8F69-0AE8A787FE8C), exclusiveto(CanvasDevice)]
    interface ICanvasDeviceStatics : IInspectable
    {
        HRESULT CreateFromDirect3D11Device(
            [in] Microsoft.Graphics.Canvas.DirectX.Direct3D11.IDirect3DDevice* direct3DDevice,
            [in] CanvasDebugLevel debugLevel,
            [out, retval] CanvasDevice** canvasDevice);
    };

    [version(VERSION), uuid(A27F0B5D-EC2C-4D4F-948F-0AA1E95E33E6), exclusiveto(CanvasDevice)]
    interface ICanvasDevice : IInspectable
        requires Windows.Foundation.IClosable, 
                 ICanvasResourceCreator, 
                 Microsoft.Graphics.Canvas.DirectX.Direct3D11.IDirect3DDevice
    {
        [propget] 
        HRESULT HardwareAcceleration(
            [out, retval] CanvasHardwareAcceleration* value);

        [propget]
        HRESULT MaximumBitmapSizeInPixels(
            [out, retval] INT32* value);
    };

    [version(VERSION), activatable(VERSION), activatable(ICanvasDeviceFactory, VERSION), static(ICanvasDeviceStatics, VERSION)]
    runtimeclass CanvasDevice
    {
        [default] interface ICanvasDevice;
    }
}
