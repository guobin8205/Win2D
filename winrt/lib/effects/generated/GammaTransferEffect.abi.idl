// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may
// not use these files except in compliance with the License. You may obtain
// a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.

// This file was automatically generated. Please do not edit it manually.

namespace Microsoft.Graphics.Canvas.Effects
{
    runtimeclass GammaTransferEffect;

    [version(VERSION), uuid(B4576B6B-6C3E-534A-8576-D46DF4FCE93D), exclusiveto(GammaTransferEffect)]
    interface IGammaTransferEffect : IInspectable
        requires Microsoft.Graphics.Canvas.ICanvasImage
    {
        [propget]
        HRESULT RedAmplitude([out, retval] float* value);

        [propput]
        HRESULT RedAmplitude([in] float value);

        [propget]
        HRESULT RedExponent([out, retval] float* value);

        [propput]
        HRESULT RedExponent([in] float value);

        [propget]
        HRESULT RedOffset([out, retval] float* value);

        [propput]
        HRESULT RedOffset([in] float value);

        [propget]
        HRESULT RedDisable([out, retval] boolean* value);

        [propput]
        HRESULT RedDisable([in] boolean value);

        [propget]
        HRESULT GreenAmplitude([out, retval] float* value);

        [propput]
        HRESULT GreenAmplitude([in] float value);

        [propget]
        HRESULT GreenExponent([out, retval] float* value);

        [propput]
        HRESULT GreenExponent([in] float value);

        [propget]
        HRESULT GreenOffset([out, retval] float* value);

        [propput]
        HRESULT GreenOffset([in] float value);

        [propget]
        HRESULT GreenDisable([out, retval] boolean* value);

        [propput]
        HRESULT GreenDisable([in] boolean value);

        [propget]
        HRESULT BlueAmplitude([out, retval] float* value);

        [propput]
        HRESULT BlueAmplitude([in] float value);

        [propget]
        HRESULT BlueExponent([out, retval] float* value);

        [propput]
        HRESULT BlueExponent([in] float value);

        [propget]
        HRESULT BlueOffset([out, retval] float* value);

        [propput]
        HRESULT BlueOffset([in] float value);

        [propget]
        HRESULT BlueDisable([out, retval] boolean* value);

        [propput]
        HRESULT BlueDisable([in] boolean value);

        [propget]
        HRESULT AlphaAmplitude([out, retval] float* value);

        [propput]
        HRESULT AlphaAmplitude([in] float value);

        [propget]
        HRESULT AlphaExponent([out, retval] float* value);

        [propput]
        HRESULT AlphaExponent([in] float value);

        [propget]
        HRESULT AlphaOffset([out, retval] float* value);

        [propput]
        HRESULT AlphaOffset([in] float value);

        [propget]
        HRESULT AlphaDisable([out, retval] boolean* value);

        [propput]
        HRESULT AlphaDisable([in] boolean value);

        [propget]
        HRESULT ClampOutput([out, retval] boolean* value);

        [propput]
        HRESULT ClampOutput([in] boolean value);

        [propget]
        HRESULT Source([out, retval] IEffectInput** input);

        [propput]
        HRESULT Source([in] IEffectInput* input);

    };

    [version(VERSION), activatable(VERSION)]
    runtimeclass GammaTransferEffect
    {
        [default] interface IGammaTransferEffect;
        interface IEffect;
    }
}
