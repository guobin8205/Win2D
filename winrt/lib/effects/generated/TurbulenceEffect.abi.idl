// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may
// not use these files except in compliance with the License. You may obtain
// a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.

// This file was automatically generated. Please do not edit it manually.

namespace Microsoft.Graphics.Canvas.Effects
{
    [version(VERSION)]
    typedef enum TurbulenceEffectNoise
    {
        FractalSum = 0,
        Turbulence = 1
    } TurbulenceEffectNoise;

    runtimeclass TurbulenceEffect;

    [version(VERSION), uuid(1CB1B33D-20E9-564B-856E-37E9FA1D0016), exclusiveto(TurbulenceEffect)]
    interface ITurbulenceEffect : IInspectable
        requires Microsoft.Graphics.Canvas.ICanvasImage
    {
        [propget]
        HRESULT Offset([out, retval] Microsoft.Graphics.Canvas.Numerics.Vector2* value);

        [propput]
        HRESULT Offset([in] Microsoft.Graphics.Canvas.Numerics.Vector2 value);

        [propget]
        HRESULT Size([out, retval] Microsoft.Graphics.Canvas.Numerics.Vector2* value);

        [propput]
        HRESULT Size([in] Microsoft.Graphics.Canvas.Numerics.Vector2 value);

        [propget]
        HRESULT Frequency([out, retval] Microsoft.Graphics.Canvas.Numerics.Vector2* value);

        [propput]
        HRESULT Frequency([in] Microsoft.Graphics.Canvas.Numerics.Vector2 value);

        [propget]
        HRESULT Octaves([out, retval] INT32* value);

        [propput]
        HRESULT Octaves([in] INT32 value);

        [propget]
        HRESULT Seed([out, retval] INT32* value);

        [propput]
        HRESULT Seed([in] INT32 value);

        [propget]
        HRESULT Noise([out, retval] TurbulenceEffectNoise* value);

        [propput]
        HRESULT Noise([in] TurbulenceEffectNoise value);

        [propget]
        HRESULT Tileable([out, retval] boolean* value);

        [propput]
        HRESULT Tileable([in] boolean value);

    };

    [version(VERSION), activatable(VERSION)]
    runtimeclass TurbulenceEffect
    {
        [default] interface ITurbulenceEffect;
        interface IEffect;
    }
}
