// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may
// not use these files except in compliance with the License. You may obtain
// a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.

// This file was automatically generated. Please do not edit it manually.

namespace Microsoft.Graphics.Canvas.Effects
{
    runtimeclass TableTransferEffect;

    [version(VERSION), uuid(BF0B63B6-FE77-5198-A2A1-3FB80C268B8F), exclusiveto(TableTransferEffect)]
    interface ITableTransferEffect : IInspectable
        requires Microsoft.Graphics.Canvas.ICanvasImage
    {
        [propget]
        HRESULT RedTable([out] UINT32* valueCount, [out, size_is(, *valueCount), retval] float** valueElements);

        [propput]
        HRESULT RedTable([in] UINT32 valueCount, [in, size_is(valueCount)] float* valueElements);

        [propget]
        HRESULT RedDisable([out, retval] boolean* value);

        [propput]
        HRESULT RedDisable([in] boolean value);

        [propget]
        HRESULT GreenTable([out] UINT32* valueCount, [out, size_is(, *valueCount), retval] float** valueElements);

        [propput]
        HRESULT GreenTable([in] UINT32 valueCount, [in, size_is(valueCount)] float* valueElements);

        [propget]
        HRESULT GreenDisable([out, retval] boolean* value);

        [propput]
        HRESULT GreenDisable([in] boolean value);

        [propget]
        HRESULT BlueTable([out] UINT32* valueCount, [out, size_is(, *valueCount), retval] float** valueElements);

        [propput]
        HRESULT BlueTable([in] UINT32 valueCount, [in, size_is(valueCount)] float* valueElements);

        [propget]
        HRESULT BlueDisable([out, retval] boolean* value);

        [propput]
        HRESULT BlueDisable([in] boolean value);

        [propget]
        HRESULT AlphaTable([out] UINT32* valueCount, [out, size_is(, *valueCount), retval] float** valueElements);

        [propput]
        HRESULT AlphaTable([in] UINT32 valueCount, [in, size_is(valueCount)] float* valueElements);

        [propget]
        HRESULT AlphaDisable([out, retval] boolean* value);

        [propput]
        HRESULT AlphaDisable([in] boolean value);

        [propget]
        HRESULT ClampOutput([out, retval] boolean* value);

        [propput]
        HRESULT ClampOutput([in] boolean value);

        [propget]
        HRESULT Source([out, retval] IEffectInput** input);

        [propput]
        HRESULT Source([in] IEffectInput* input);

    };

    [version(VERSION), activatable(VERSION)]
    runtimeclass TableTransferEffect
    {
        [default] interface ITableTransferEffect;
        interface IEffect;
    }
}
